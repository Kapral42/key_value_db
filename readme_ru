В разработанной базе данных для хранения ключей и значений используется
хеш-таблица. Для реализации дедупликации значений в таблице применена 
обратная индексация (индексация по значениям). Ключи хранятся в массиве 
ключей, значения в массиве значений, поиск обоих производится путем применения
хеш-функции и имеет вычислительную сложность O(1). Значение удаляется из
таблицы после того как на него перестает ссылаться хотя-бы один ключ. 
В качестве хеш-функции используется алгоритм CRC (CRC8 встроен в реализацию и 
CRC32 вызывается из библиотеки zlib, для подключения данной библиотеки 
требуется выполнить make с опцией zlib=1).

PUT O(1) - Добавление ключа и значения в базу, сохранение полученных данных на 
    диск если они не присутствовали в таблице ранее.

GET O(1) - Поиск значения по ключу

ERASE O(1) - Удаление значения по ключу. В данной базе данных реализована двух 
    этапная схема удаления элементов. Ленивое удаление производится за 
    константное время и просто помечает элемент как удаленный. Реальное удаление
    (real_delete) освобождает все помеченные ключи и значения и переписывает 
    данные на диске, имеет вычислительную сложность O(n).

LIST O(n) - Вывод всех ключей на экран.

EXIT O(n) - функция безопасного отключения сервера, выполняет операцию 
    real_delete если это необходимо и сохраняет метаданные базы на диск.

База данных поддерживает параллельное обращение сразу нескольких клиентов. 
Операции чтения не блокируются. Операции записи не могут выполнятся 
параллельно. Для упрощения реализации многопоточности использовалась 
технология OpenMP.
